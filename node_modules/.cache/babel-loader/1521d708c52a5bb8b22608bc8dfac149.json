{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isk\\\\ETH-NFT-game\\\\nft-game-starter-project\\\\src\\\\Components\\\\SelectCharacter\\\\index.js\",\n    _s = $RefreshSig$();\n\n// SelectCharacter/index.js\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport \"./SelectCharacter.css\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport LoadingIndicator from \"../../Components/LoadingIndicator\"; // SelectCharacter コンポーネントを定義しています。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCharacter = _ref => {\n  _s();\n\n  let {\n    setCharacterNFT\n  } = _ref;\n  //NFT キャラクターのメタデータを保存する状態変数を初期化します。\n  const [characters, setCharacters] = useState([]); // コントラクトのデータを保有する状態変数を初期化します。\n\n  const [gameContract, setGameContract] = useState(null); // Minting の状態保存する状態変数を初期化します。\n\n  const [mintingCharacter, setMintingCharacter] = useState(false); // NFT を Mint します。\n\n  const mintCharacterNFTAction = characterId => async () => {\n    try {\n      if (gameContract) {\n        // Mint が開始されたら、ローディングマークを表示する。\n        setMintingCharacter(true);\n        console.log(\"Minting character in progress...\");\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\n        await mintTxn.wait();\n        console.log(\"mintTxn:\", mintTxn); // Mint が終了したら、ローディングマークを消す。\n\n        setMintingCharacter(false);\n      }\n    } catch (error) {\n      console.warn(\"MintCharacterAction Error:\", error); // エラーが発生した場合も、ローディングマークを消す。\n\n      setMintingCharacter(false);\n    }\n  }; // ページがロードされた瞬間に下記を実行します。\n\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer); // gameContract の状態を更新します。\n\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  useEffect(() => {\n    // NFT キャラクターのデータをスマートコントラクトから取得します。\n    const getCharacters = async () => {\n      try {\n        console.log(\"Getting contract characters to mint\"); // ミント可能な全 NFT キャラクター をコントラクトをから呼び出します。\n\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n        console.log(\"charactersTxn:\", charactersTxn); // すべてのNFTキャラクターのデータを変換します。\n\n        const characters = charactersTxn.map(characterData => transformCharacterData(characterData)); // ミント可能なすべてのNFTキャラクターの状態を設定します。\n\n        setCharacters(characters);\n      } catch (error) {\n        console.error(\"Something went wrong fetching characters:\", error);\n      }\n    }; // イベントを受信したときに起動するコールバックメソッド onCharacterMint を追加します。\n\n\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\n      console.log(`CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`); // NFT キャラクターが Mint されたら、コントラクトからメタデータを受け取り、アリーナ（ボスとのバトルフィールド）に移動するための状態に設定します。\n\n      if (gameContract) {\n        const characterNFT = await gameContract.checkIfUserHasNFT();\n        console.log(\"CharacterNFT: \", characterNFT);\n        setCharacterNFT(transformCharacterData(characterNFT));\n        alert(`NFT キャラクーが Mint されました -- リンクはこちらです: https://rinkeby.rarible.com/token/${gameContract.address}:${tokenId.toNumber()}?tab=details`);\n      }\n    };\n\n    if (gameContract) {\n      getCharacters(); // リスナーの設定：NFT キャラクターが Mint された通知を受け取ります。\n\n      gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n    }\n\n    return () => {\n      // コンポーネントがマウントされたら、リスナーを停止する。\n      if (gameContract) {\n        gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n      }\n    };\n  }, [gameContract]); // NFT キャラクターをフロントエンドにレンダリングするメソッドです。\n\n  const renderCharacters = () => characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character.imageURI,\n      alt: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"character-mint-button\",\n      onClick: mintCharacterNFTAction(index),\n      children: `Mint ${character.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, character.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-character-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u23EC \\u4E00\\u7DD2\\u306B\\u6226\\u3046 NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u9078\\u629E \\u23EC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), characters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-grid\",\n      children: renderCharacters()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), mintingCharacter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Minting In Progress...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectCharacter, \"YAIluGJumFDmJAPdOeDT94pTudM=\");\n\n_c = SelectCharacter;\nexport default SelectCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCharacter\");","map":{"version":3,"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","LoadingIndicator","SelectCharacter","setCharacterNFT","characters","setCharacters","gameContract","setGameContract","mintingCharacter","setMintingCharacter","mintCharacterNFTAction","characterId","console","log","mintTxn","mintCharacterNFT","wait","error","warn","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","getCharacters","charactersTxn","getAllDefaultCharacters","map","characterData","onCharacterMint","sender","tokenId","characterIndex","toNumber","characterNFT","checkIfUserHasNFT","alert","address","on","off","renderCharacters","character","index","name","imageURI","length"],"sources":["C:/Users/isk/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js"],"sourcesContent":["// SelectCharacter/index.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\r\nimport \"./SelectCharacter.css\";\r\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\r\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\r\n\r\n// SelectCharacter コンポーネントを定義しています。\r\nconst SelectCharacter = ({ setCharacterNFT }) => {\r\n\r\n  //NFT キャラクターのメタデータを保存する状態変数を初期化します。\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  // コントラクトのデータを保有する状態変数を初期化します。\r\n  const [gameContract, setGameContract] = useState(null);\r\n\r\n  // Minting の状態保存する状態変数を初期化します。\r\n  const [mintingCharacter, setMintingCharacter] = useState(false);\r\n\r\n  // NFT を Mint します。\r\n  const mintCharacterNFTAction = (characterId) => async () => {\r\n    try {\r\n      if (gameContract) {\r\n        // Mint が開始されたら、ローディングマークを表示する。\r\n        setMintingCharacter(true);\r\n\r\n        console.log(\"Minting character in progress...\");\r\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\r\n        await mintTxn.wait();\r\n        console.log(\"mintTxn:\", mintTxn);\r\n        // Mint が終了したら、ローディングマークを消す。\r\n        setMintingCharacter(false);\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"MintCharacterAction Error:\", error);\r\n      // エラーが発生した場合も、ローディングマークを消す。\r\n      setMintingCharacter(false);\r\n    }\r\n  };\r\n\r\n  // ページがロードされた瞬間に下記を実行します。\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum) {\r\n      const provider = new ethers.providers.Web3Provider(ethereum);\r\n      const signer = provider.getSigner();\r\n      const gameContract = new ethers.Contract(\r\n        CONTRACT_ADDRESS,\r\n        myEpicGame.abi,\r\n        signer\r\n      );\r\n\r\n      // gameContract の状態を更新します。\r\n      setGameContract(gameContract);\r\n    } else {\r\n      console.log(\"Ethereum object not found\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // NFT キャラクターのデータをスマートコントラクトから取得します。\r\n    const getCharacters = async () => {\r\n      try {\r\n        console.log(\"Getting contract characters to mint\");\r\n  \r\n        // ミント可能な全 NFT キャラクター をコントラクトをから呼び出します。\r\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\r\n  \r\n        console.log(\"charactersTxn:\", charactersTxn);\r\n  \r\n        // すべてのNFTキャラクターのデータを変換します。\r\n        const characters = charactersTxn.map((characterData) =>\r\n          transformCharacterData(characterData)\r\n        );\r\n  \r\n        // ミント可能なすべてのNFTキャラクターの状態を設定します。\r\n        setCharacters(characters);\r\n      } catch (error) {\r\n        console.error(\"Something went wrong fetching characters:\", error);\r\n      }\r\n    };\r\n  \r\n    // イベントを受信したときに起動するコールバックメソッド onCharacterMint を追加します。\r\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\r\n      console.log(\r\n        `CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`\r\n      );\r\n      // NFT キャラクターが Mint されたら、コントラクトからメタデータを受け取り、アリーナ（ボスとのバトルフィールド）に移動するための状態に設定します。\r\n      if (gameContract) {\r\n        const characterNFT = await gameContract.checkIfUserHasNFT();\r\n        console.log(\"CharacterNFT: \", characterNFT);\r\n        setCharacterNFT(transformCharacterData(characterNFT));\r\n        alert(\r\n          `NFT キャラクーが Mint されました -- リンクはこちらです: https://rinkeby.rarible.com/token/${\r\n            gameContract.address\r\n          }:${tokenId.toNumber()}?tab=details`\r\n        );\r\n      }\r\n    };\r\n  \r\n    if (gameContract) {\r\n      getCharacters();\r\n      // リスナーの設定：NFT キャラクターが Mint された通知を受け取ります。\r\n      gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\r\n    }\r\n  \r\n    return () => {\r\n      // コンポーネントがマウントされたら、リスナーを停止する。\r\n  \r\n      if (gameContract) {\r\n        gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\r\n      }\r\n    };\r\n  }, [gameContract]);\r\n\r\n  // NFT キャラクターをフロントエンドにレンダリングするメソッドです。\r\n  const renderCharacters = () =>\r\n  characters.map((character, index) => (\r\n    <div className=\"character-item\" key={character.name}>\r\n      <div className=\"name-container\">\r\n        <p>{character.name}</p>\r\n      </div>\r\n      <img src={character.imageURI} alt={character.name} />\r\n      <button\r\n        type=\"button\"\r\n        className=\"character-mint-button\"\r\n        onClick={mintCharacterNFTAction(index)}\r\n      >{`Mint ${character.name}`}</button>\r\n    </div>\r\n  ));\r\n  \r\n  return (\r\n    <div className=\"select-character-container\">\r\n      <h2>⏬ 一緒に戦う NFT キャラクターを選択 ⏬</h2>\r\n      {characters.length > 0 && (\r\n        <div className=\"character-grid\">{renderCharacters()}</div>\r\n      )}\r\n      {/* mintingCharacter = trueの場合のみ、ローディングマークを表示します。*/}\r\n      {mintingCharacter && (\r\n        <div className=\"loading\">\r\n          <div className=\"indicator\">\r\n            <LoadingIndicator />\r\n            <p>Minting In Progress...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default SelectCharacter;"],"mappings":"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"},"metadata":{},"sourceType":"module"}