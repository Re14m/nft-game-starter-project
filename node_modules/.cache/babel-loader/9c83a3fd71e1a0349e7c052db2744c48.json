{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isk\\\\ETH-NFT-game\\\\nft-game-starter-project\\\\src\\\\Components\\\\Arena\\\\index.js\",\n    _s = $RefreshSig$();\n\n// index.js\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\"; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null); // ボスのメタデータを保存する状態変数を初期化します。\n\n  const [boss, setBoss] = useState(null); // 攻撃の状態を保存する変数を初期化します。\n\n  const [attackState, setAttackState] = useState(\"\"); // NFTキャラクターがボスを攻撃する際に使用する関数を定義します。\n\n  const runAttackAction = async () => {\n    try {\n      // コントラクトが呼び出されたことを確認します。\n      if (gameContract) {\n        // attackState の状態を attacking に設定します。\n        setAttackState(\"attacking\");\n        console.log(\"Attacking boss...\"); // NFT キャラクターがボスを攻撃します。\n\n        const attackTxn = await gameContract.attackBoss(); // トランザクションがマイニングされるまで待ちます。\n\n        await attackTxn.wait();\n        console.log(\"attackTxn:\", attackTxn); // attackState の状態を hit に設定します。\n\n        setAttackState(\"hit\");\n      }\n    } catch (error) {\n      console.error(\"Error attacking boss:\", error);\n      setAttackState(\"\");\n    }\n  }; // ページがロードされると下記が実行されます。\n\n\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss:\", bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n\n    if (gameContract) {\n      // コントラクトの準備ができたら、ボスのメタデータを取得します。\n      fetchBoss();\n    }\n  }, [gameContract]); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content ${attackState}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: boss.imageURI,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `💥 Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: characterNFT.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: characterNFT.imageURI,\n              alt: `Character ${characterNFT.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n                value: characterNFT.hp,\n                max: characterNFT.maxHp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${characterNFT.hp} / ${characterNFT.maxHp} HP`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: `⚔️ Attack Damage: ${characterNFT.attackDamage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Arena, \"vPhjjoPmmPFQTej4qk4WP/WdhD4=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","gameContract","setGameContract","boss","setBoss","attackState","setAttackState","runAttackAction","console","log","attackTxn","attackBoss","wait","error","fetchBoss","bossTxn","getBigBoss","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","imageURI","hp","maxHp","attackDamage"],"sources":["C:/Users/isk/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"sourcesContent":["// index.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\r\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\r\nimport \"./Arena.css\";\r\n\r\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\r\nconst Arena = ({ characterNFT }) => {\r\n  // コントラクトのデータを保有する状態変数を初期化します。\r\n  const [gameContract, setGameContract] = useState(null);\r\n\r\n  // ボスのメタデータを保存する状態変数を初期化します。\r\n  const [boss, setBoss] = useState(null);\r\n\r\n  // 攻撃の状態を保存する変数を初期化します。\r\n  const [attackState, setAttackState] = useState(\"\");\r\n\r\n  // NFTキャラクターがボスを攻撃する際に使用する関数を定義します。\r\n  const runAttackAction = async () => {\r\n    try {\r\n      // コントラクトが呼び出されたことを確認します。\r\n      if (gameContract) {\r\n        // attackState の状態を attacking に設定します。\r\n        setAttackState(\"attacking\");\r\n        console.log(\"Attacking boss...\");\r\n  \r\n        // NFT キャラクターがボスを攻撃します。\r\n        const attackTxn = await gameContract.attackBoss();\r\n  \r\n        // トランザクションがマイニングされるまで待ちます。\r\n        await attackTxn.wait();\r\n        console.log(\"attackTxn:\", attackTxn);\r\n  \r\n        // attackState の状態を hit に設定します。\r\n        setAttackState(\"hit\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error attacking boss:\", error);\r\n      setAttackState(\"\");\r\n    }\r\n  };\r\n  \r\n  // ページがロードされると下記が実行されます。\r\n  useEffect(() => {\r\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\r\n    const fetchBoss = async () => {\r\n        const bossTxn = await gameContract.getBigBoss();\r\n        console.log(\"Boss:\", bossTxn);\r\n        setBoss(transformCharacterData(bossTxn));\r\n    };\r\n    if (gameContract) {\r\n        // コントラクトの準備ができたら、ボスのメタデータを取得します。\r\n        fetchBoss();\r\n    }\r\n    }, [gameContract]);\r\n\r\n  // ページがロードされると下記が実行されます。\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum) {\r\n      const provider = new ethers.providers.Web3Provider(ethereum);\r\n      const signer = provider.getSigner();\r\n      const gameContract = new ethers.Contract(\r\n        CONTRACT_ADDRESS,\r\n        myEpicGame.abi,\r\n        signer\r\n      );\r\n      setGameContract(gameContract);\r\n    } else {\r\n      console.log(\"Ethereum object not found\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"arena-container\">\r\n      {/* ボスをレンダリングします */}\r\n      {boss && (\r\n        <div className=\"boss-container\">\r\n          {/* attackState 追加します */}\r\n          <div className={`boss-content ${attackState}`}>\r\n            <h2>🔥 {boss.name} 🔥</h2>\r\n            <div className=\"image-content\">\r\n              <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\r\n              <div className=\"health-bar\">\r\n                <progress value={boss.hp} max={boss.maxHp} />\r\n                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"attack-container\">\r\n            <button className=\"cta-button\" onClick={runAttackAction}>\r\n              {`💥 Attack ${boss.name}`}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* NFT キャラクター をレンダリングします*/}\r\n      {characterNFT && (\r\n        <div className=\"players-container\">\r\n          <div className=\"player-container\">\r\n            <h2>Your Character</h2>\r\n            <div className=\"player\">\r\n              <div className=\"image-content\">\r\n                <h2>{characterNFT.name}</h2>\r\n                <img\r\n                  src={characterNFT.imageURI}\r\n                  alt={`Character ${characterNFT.name}`}\r\n                />\r\n                <div className=\"health-bar\">\r\n                  <progress value={characterNFT.hp} max={characterNFT.maxHp} />\r\n                  <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"stats\">\r\n                <h4>{`⚔️ Attack Damage: ${characterNFT.attackDamage}`}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Arena;"],"mappings":"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"},"metadata":{},"sourceType":"module"}